{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-3\"\n}, \"Информация о студентах\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"card-title\"\n}, \"Студенты без сгенерированного варианта\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"card mt-2\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_7 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_8 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_9 = {\n  class: \"list-group-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h4 class=\\\"card-title\\\">Студенты без сгенерированного варианта</h4>\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                    {{ user.id }}\\r\\n                    {{ user.email }}\\r\\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\\r\\n                    {{ user.student_group }}\\r\\n\\r\\n                    <div v-for=\\\"user in usersWithoutOption\\\" :key=\\\"user.id\\\">\\r\\n                        <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <h5 class=\\\"card-title\\\">Card title</h5>\\r\\n                                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Card subtitle</h6>\\r\\n                                <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the\\r\\n                                    bulk\\r\\n                                    of the card's content.</p>\\r\\n                                <a href=\\\"#\\\" class=\\\"card-link\\\">Card link</a>\\r\\n                                <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>{{ usersWithoutOption }}</div>\\r\\n\\r\\n        </div>\\r\\n    </div> \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.usersWithoutOption, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"ul\", _hoisted_6, [_createElementVNode(\"li\", _hoisted_7, [_createElementVNode(\"h5\", _hoisted_8, _toDisplayString(user.first_name) + \" \" + _toDisplayString(user.last_name), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_9, [_createElementVNode(\"p\", null, \" Полное имя: \" + _toDisplayString(user.first_name) + \" \" + _toDisplayString(user.last_name) + \" \" + _toDisplayString(user.middle_name), 1 /* TEXT */), _createElementVNode(\"p\", null, \" Группа: \" + _toDisplayString(user.student_group), 1 /* TEXT */), _createElementVNode(\"p\", null, \" Электронная почта: \" + _toDisplayString(user.email), 1 /* TEXT */)])])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAA4C;EAAxCC,KAAK,EAAC;AAAM,GAAC,wBAAsB;;EA+BlCA,KAAK,EAAC;AAAW;gCAClBD,oBAAkE;EAA9DC,KAAK,EAAC;AAAY,GAAC,wCAAsC;;EAEpDA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAW;;EACdA,KAAK,EAAC;AAA6B;;EAC/BA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAA+B;;EAIzCA,KAAK,EAAC;AAAiB;;6DA1C/CC,UAA4C,EAC5CC,w9CA6BU,EACVH,oBA0BM,OA1BNI,UA0BM,GAzBFC,UAAkE,qBAClEC,oBAuBMC,6BAvBcC,wBAAkB,EAA1BC,IAAI;yBAAhBH,oBAuBM;MAvBmCI,GAAG,EAAED,IAAI,CAACE;QAC/CX,oBAqBM,OArBNY,UAqBM,GApBFZ,oBAmBM,OAnBNa,UAmBM,GAlBFb,oBAiBK,MAjBLc,UAiBK,GAhBDd,oBAIK,MAJLe,UAIK,GAHDf,oBAEK,MAFLgB,UAEK,mBADEP,IAAI,CAACQ,UAAU,IAAG,GAAC,oBAAGR,IAAI,CAACS,SAAS,oBAG/ClB,oBAUK,MAVLmB,UAUK,GATDnB,oBAEI,WAFD,eACa,oBAAGS,IAAI,CAACQ,UAAU,IAAG,GAAC,oBAAGR,IAAI,CAACS,SAAS,IAAG,GAAC,oBAAET,IAAI,CAACW,WAAW,kBAE7EpB,oBAEI,WAFD,WACS,oBAAGS,IAAI,CAACY,aAAa,kBAEjCrB,oBAEI,WAFD,sBACoB,oBAAGS,IAAI,CAACa,KAAK","names":["_createElementVNode","class","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","$data","user","key","id","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","first_name","last_name","_hoisted_9","middle_name","student_group","email"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\StudentsDo.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"mb-3\">Информация о студентах</h1>\r\n    <!-- <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Студенты без сгенерированного варианта</h4>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n\r\n                    {{ user.id }}\r\n                    {{ user.email }}\r\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\r\n                    {{ user.student_group }}\r\n\r\n                    <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n                        <div class=\"card\" style=\"width: 18rem;\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Card title</h5>\r\n                                <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p class=\"card-text\">Some quick example text to build on the card title and make up the\r\n                                    bulk\r\n                                    of the card's content.</p>\r\n                                <a href=\"#\" class=\"card-link\">Card link</a>\r\n                                <a href=\"#\" class=\"card-link\">Another link</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>{{ usersWithoutOption }}</div>\r\n\r\n        </div>\r\n    </div> -->\r\n    <div class=\"card-body\">\r\n        <h3 class=\"card-title\">Студенты без сгенерированного варианта</h3>\r\n        <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n            <div class=\"card mt-2\">\r\n                <div class=\"card-body\">\r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\">\r\n                            <h5 class=\"card-subtitle mb-2 text-muted\">\r\n                                {{ user.first_name }} {{ user.last_name }}\r\n                            </h5>\r\n                        </li>\r\n                        <li class=\"list-group-item\">\r\n                            <p>\r\n                                Полное имя: {{ user.first_name }} {{ user.last_name }} {{user.middle_name}}\r\n                            </p>\r\n                            <p>\r\n                                Группа: {{ user.student_group }}\r\n                            </p>\r\n                            <p>\r\n                                Электронная почта: {{ user.email }}\r\n                            </p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'StudentsDo',\r\n    data() {\r\n        return {\r\n            profile: [],\r\n            usersWithoutOption: [],\r\n            tokeno: '',\r\n            isGeneratedTasks: false,\r\n            processGenerate: '',\r\n            isEmail: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getUserListWithoutOption()\r\n    },\r\n    methods: {\r\n        async getUserListWithoutOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_without_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithoutOption = response.data.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async generateTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.processGenerate = 'Генерируется вариант'\r\n\r\n            await axios\r\n                .post('/test_generator/generate/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.profile = response.data\r\n                    this.processGenerate = 'Вариант сгенерирован'\r\n                    this.$router.push('/account')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.processGenerate = 'Ошибка'\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}