{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LogIn',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errors: [],\n      message: [],\n      didn: []\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        const url_params = this.uid + '/' + this.token + '/';\n        const response = await axios.get('/users/reg/success/' + url_params);\n        this.message = response.data;\n      } catch (e) {\n        this.message = 'Ошибка. Попробуйте еще раз!';\n      }\n      this.$store.commit('setIsLoading', true);\n      axios.defaults.headers.common['Authorization'] = '';\n      localStorage.removeItem('token');\n      const formData = {\n        email: this.email,\n        password: this.password\n      };\n      await axios.post('/users/login/', formData).then(response => {\n        const token = response.data.token;\n        this.$store.commit('setToken', token);\n        axios.defaults.headers.common['Authorization'] = 'Token ' + token;\n        localStorage.setItem('token', token);\n        this.$router.push('/account');\n      }).catch(error => {\n        if (error.message) {\n          this.errors.push(error);\n          this.errors.push('Неверный логин или пароль!');\n        }\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"mappings":";AA+BI,OAAOA,KAAI,MAAO,OAAM;AACxB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;IACV;EACJ,CAAC;EACDC,OAAO,EAAE;IAEL,MAAMC,UAAU,GAAG;MACf,IAAI;QACA,MAAMC,UAAS,GAAI,IAAI,CAACC,GAAE,GAAI,GAAE,GAAI,IAAI,CAACC,KAAI,GAAI,GAAE;QACnD,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,qBAAoB,GAAIJ,UAAU;QACnE,IAAI,CAACJ,OAAM,GAAIO,QAAQ,CAACX,IAAG;MAC/B,EAAE,OAAOa,CAAC,EAAE;QACR,IAAI,CAACT,OAAM,GAAI,6BAA4B;MAC/C;MAEA,IAAI,CAACU,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI;MACvCjB,KAAK,CAACkB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,EAAC;MAClDC,YAAY,CAACC,UAAU,CAAC,OAAO;MAC/B,MAAMC,QAAO,GAAI;QACbpB,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACnB;MACA,MAAMJ,KAAI,CACLwB,IAAI,CAAC,eAAe,EAAED,QAAQ,EAC9BE,IAAI,CAACZ,QAAO,IAAK;QACd,MAAMD,KAAI,GAAIC,QAAQ,CAACX,IAAI,CAACU,KAAI;QAChC,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEL,KAAK;QACpCZ,KAAK,CAACkB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,QAAO,GAAIR,KAAI;QAChES,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEd,KAAK;QACnC,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,UAAU;MAChC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZ,IAAIA,KAAK,CAACxB,OAAO,EAAE;UACf,IAAI,CAACD,MAAM,CAACuB,IAAI,CAACE,KAAK;UACtB,IAAI,CAACzB,MAAM,CAACuB,IAAI,CAAC,4BAA4B;QACjD;MACJ,CAAC;MACL,IAAI,CAACZ,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,KAAK;IAC5C;EACJ;AACJ","names":["axios","name","data","email","password","errors","message","didn","methods","submitForm","url_params","uid","token","response","get","e","$store","commit","defaults","headers","common","localStorage","removeItem","formData","post","then","setItem","$router","push","catch","error"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\LogIn.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"columns\">\r\n            <div class=\"column is-4 is-offset-4\">\r\n                <h1 class=\"title mb-3\">Авторизация</h1>\r\n                <div> {{didn}}</div>\r\n                <form @submit.prevent=\"submitForm\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Электронная почта</label>\r\n                        <input type=\"text\" name=\"email\" class=\"form-control\" v-model=\"email\">\r\n                    </div>\r\n                    \r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Пароль</label>\r\n                        <input type=\"password\" name=\"password\" class=\"form-control\" v-model=\"password\">\r\n                    </div>\r\n                    <div class=\"notification is-danger\" v-if=\"errors.length\">\r\n                        <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Войти</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    export default {\r\n        name: 'LogIn',\r\n        data() {\r\n            return {\r\n                email: '',\r\n                password: '',\r\n                errors: [],\r\n                message: [],\r\n                didn: []\r\n            }\r\n        },\r\n        methods: {\r\n            \r\n            async submitForm() {\r\n                try {\r\n                    const url_params = this.uid + '/' + this.token + '/'\r\n                    const response = await axios.get('/users/reg/success/' + url_params)\r\n                    this.message = response.data\r\n                } catch (e) {\r\n                    this.message = 'Ошибка. Попробуйте еще раз!'\r\n                }\r\n\r\n                this.$store.commit('setIsLoading', true)\r\n                axios.defaults.headers.common['Authorization'] = ''\r\n                localStorage.removeItem('token')\r\n                const formData = {\r\n                    email: this.email,\r\n                    password: this.password\r\n                }\r\n                await axios\r\n                    .post('/users/login/', formData)\r\n                    .then(response => {\r\n                        const token = response.data.token\r\n                        this.$store.commit('setToken', token)\r\n                        axios.defaults.headers.common['Authorization'] = 'Token ' + token\r\n                        localStorage.setItem('token', token)\r\n                        this.$router.push('/account')\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.message) {\r\n                            this.errors.push(error)\r\n                            this.errors.push('Неверный логин или пароль!')\r\n                        }\r\n                    })\r\n                this.$store.commit('setIsLoading', false)\r\n            }\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}