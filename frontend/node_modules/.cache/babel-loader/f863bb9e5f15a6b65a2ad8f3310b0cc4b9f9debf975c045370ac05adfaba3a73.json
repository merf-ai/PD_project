{"ast":null,"code":"import { throwStatement } from '@babel/types';\nimport axios from 'axios';\nexport default {\n  name: 'VerifyEmail',\n  data() {\n    return {\n      message: []\n    };\n  },\n  computed: {\n    uid() {\n      return this.$route.params.uid;\n    },\n    token() {\n      return this.$route.params.token;\n    }\n  },\n  methods: {\n    async verifyEmailAccount() {\n      try {\n        const url_params = this.uid + '/' + this.token + '/';\n        const response = await axios.get('/users/reg/success/' + url_params);\n        this.message = response.data;\n      } catch (e) {\n        this.message = 'Ошибка. Попробуйте еще раз!';\n      }\n    }\n  },\n  mounted() {\n    this.verifyEmailAccount();\n  }\n};","map":{"version":3,"mappings":"AAMA,SAASA,cAAa,QAAS,cAAc;AAC7C,OAAOC,KAAI,MAAO,OAAM;AACxB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACL,OAAM;MACJC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,GAAG,GAAG;MACJ,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,GAAG;IAC/B,CAAC;IACDG,KAAK,GAAG;MACN,OAAO,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,KAAK;IACjC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,kBAAkB,GAAG;MACzB,IAAI;QACF,MAAMC,UAAS,GAAI,IAAI,CAACN,GAAE,GAAI,GAAE,GAAI,IAAI,CAACG,KAAI,GAAI,GAAE;QACnD,MAAMI,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,qBAAoB,GAAIF,UAAU;QACnE,IAAI,CAACR,OAAM,GAAIS,QAAQ,CAACV,IAAG;MAC7B,EAAE,OAAOY,CAAC,EAAE;QACV,IAAI,CAACX,OAAM,GAAI,6BAA4B;MAC7C;IACF;EACF,CAAC;EACDY,OAAO,GAAG;IACR,IAAI,CAACL,kBAAkB,EAAE;EAC3B;AACF,CAAC","names":["throwStatement","axios","name","data","message","computed","uid","$route","params","token","methods","verifyEmailAccount","url_params","response","get","e","mounted"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project-main\\PD_project-main\\frontend\\src\\views\\VerifyEmail.vue"],"sourcesContent":["<template>\r\n  <h1 class=\"title mb-3\">Верификация электронной почты</h1>\r\n  <h5 v-if=\"message['message']\"> {{message['message']}}</h5>\r\n</template>\r\n  \r\n<script>\r\nimport { throwStatement } from '@babel/types';\r\nimport axios from 'axios'\r\nexport default {\r\n  name: 'VerifyEmail',\r\n  data() {\r\n    return{\r\n      message: []\r\n    }\r\n  },\r\n  computed: {\r\n    uid() {\r\n      return this.$route.params.uid;\r\n    },\r\n    token() {\r\n      return this.$route.params.token;\r\n    }\r\n  },\r\n  methods: {\r\n    async verifyEmailAccount() {\r\n      try {\r\n        const url_params = this.uid + '/' + this.token + '/'\r\n        const response = await axios.get('/users/reg/success/' + url_params)\r\n        this.message = response.data\r\n      } catch (e) {\r\n        this.message = 'Ошибка. Попробуйте еще раз!'\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.verifyEmailAccount();\r\n  }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}