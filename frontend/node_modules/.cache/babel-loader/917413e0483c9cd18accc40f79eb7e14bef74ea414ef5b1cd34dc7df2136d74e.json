{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'StudentsDo',\n  data() {\n    return {\n      profile: [],\n      usersWithoutOption: [],\n      usersWithOption: [],\n      tokeno: '',\n      isGeneratedTasks: false,\n      processGenerate: '',\n      isEmail: ''\n    };\n  },\n  mounted() {\n    this.getUserListWithoutOption(), this.getUserListWithOption();\n  },\n  methods: {\n    async getUserListWithOption() {\n      this.$store.commit('setIsLoading', true);\n      await axios.post('/users/user_list_with_option/', {\n        headers: {\n          'Authorization': 'Token ' + this.$store.state.token\n        }\n      }).then(response => {\n        this.usersWithOption = response.data.data;\n      }).catch(error => {\n        if (error.response) {\n          this.isEmail = error.response.data.detail;\n        }\n        console.log(error);\n        this.isGeneratedTasks = false;\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n    async getUserListWithoutOption() {\n      this.$store.commit('setIsLoading', true);\n      await axios.post('/users/user_list_without_option/', {\n        headers: {\n          'Authorization': 'Token ' + this.$store.state.token\n        }\n      }).then(response => {\n        this.usersWithoutOption = response.data.data;\n      }).catch(error => {\n        if (error.response) {\n          this.isEmail = error.response.data.detail;\n        }\n        console.log(error);\n        this.isGeneratedTasks = false;\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n    async generateTask() {\n      this.$store.commit('setIsLoading', true);\n      this.processGenerate = 'Генерируется вариант';\n      await axios.post('/test_generator/generate/', {\n        headers: {\n          'Authorization': 'Token ' + this.$store.state.token\n        }\n      }).then(response => {\n        this.profile = response.data;\n        this.processGenerate = 'Вариант сгенерирован';\n        this.$router.push('/account');\n      }).catch(error => {\n        console.log(error);\n        this.processGenerate = 'Ошибка';\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","profile","usersWithoutOption","usersWithOption","tokeno","isGeneratedTasks","processGenerate","isEmail","mounted","getUserListWithoutOption","getUserListWithOption","methods","$store","commit","post","headers","state","token","then","response","catch","error","detail","console","log","generateTask","$router","push"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\StudentsDo.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"mb-3\">Информация о студентах</h1>\r\n    <!-- <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Студенты без сгенерированного варианта</h4>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n\r\n                    {{ user.id }}\r\n                    {{ user.email }}\r\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\r\n                    {{ user.student_group }}\r\n\r\n                    <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n                        <div class=\"card\" style=\"width: 18rem;\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Card title</h5>\r\n                                <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p class=\"card-text\">Some quick example text to build on the card title and make up the\r\n                                    bulk\r\n                                    of the card's content.</p>\r\n                                <a href=\"#\" class=\"card-link\">Card link</a>\r\n                                <a href=\"#\" class=\"card-link\">Another link</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>{{ usersWithoutOption }}</div>\r\n\r\n        </div>\r\n    </div> -->\r\n    <div v-if=\"usersWithoutOption.length\" class=\"card-body\">\r\n        <h3 class=\"card-title\">Студенты без сгенерированного варианта</h3>\r\n        <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\">\r\n                            <h5 class=\"card-subtitle mb-2 text-muted\">\r\n                                {{ user.first_name }} {{ user.last_name }} {{ user.middle_name }}\r\n                            </h5>\r\n                        </li>\r\n\r\n                        <li class=\"list-group-item\">\r\n                            <dl class=\"row mb-0\">\r\n                                <dt class=\"col-sm-3\">Группа: </dt>\r\n                                <dd class=\"col-sm-9\">{{ user.student_group }}</dd>\r\n                                <dt class=\"col-sm-3\">Почта: </dt>\r\n                                <dd class=\"col-sm-9\">{{ user.email }}</dd>\r\n                            </dl>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-if=\"usersWithOption.length\" class=\"card-body mt-5\">\r\n        <h3 class=\"card-title\">Студенты без сгенерированного варианта</h3>\r\n        <div v-for=\"userWithOption in usersWithOption\" :key=\"userWithOption.id\">\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\">\r\n                            <h5 class=\"card-subtitle mb-2 text-muted\">\r\n                                {{ userWithOption.user__first_name }} {{ userWithOption.user__last_name }} {{ userWithOption.user__middle_name }}\r\n                            </h5>\r\n                        </li>\r\n\r\n                        <li class=\"list-group-item\">\r\n                            <dl class=\"row mb-0\">\r\n                                <dt class=\"col-sm-3\">Группа: </dt>\r\n                                <dd class=\"col-sm-9\">{{ userWithOption.user__student_group }}</dd>\r\n                                <dt class=\"col-sm-3\">Почта: </dt>\r\n                                <dd class=\"col-sm-9\">{{ userWithOption.user__email }}</dd>\r\n                            </dl>\r\n                            <a class=\"fs-5\" :href=\"'http://192.168.1.3:8000/test_generator/media/' + userWithOption.decision\">Решение</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'StudentsDo',\r\n    data() {\r\n        return {\r\n            profile: [],\r\n            usersWithoutOption: [],\r\n            usersWithOption: [],\r\n            tokeno: '',\r\n            isGeneratedTasks: false,\r\n            processGenerate: '',\r\n            isEmail: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getUserListWithoutOption(),\r\n        this.getUserListWithOption()\r\n    },\r\n    methods: {\r\n        async getUserListWithOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_with_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithOption = response.data.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        \r\n        async getUserListWithoutOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_without_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithoutOption = response.data.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async generateTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.processGenerate = 'Генерируется вариант'\r\n\r\n            await axios\r\n                .post('/test_generator/generate/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.profile = response.data\r\n                    this.processGenerate = 'Вариант сгенерирован'\r\n                    this.$router.push('/account')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.processGenerate = 'Ошибка'\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}