{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-3\"\n}, \"Информация о студентах\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"card-body\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"card-title\"\n}, \"Сгенерированный вариант\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createStaticVNode(\"<ul class=\\\"list-group list-group-flush\\\"><li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">Необходимо вычислить</h5></li><li class=\\\"list-group-item\\\"><h5 class=\\\"card-title\\\">Ответ</h5></li></ul>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" <div class=\\\"card-body\\\">\\r\\n            <h4 class=\\\"card-title\\\">Студенты без сгенерированного варианта</h4>\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                    {{ user.id }}\\r\\n                    {{ user.email }}\\r\\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\\r\\n                    {{ user.student_group }}\\r\\n\\r\\n                    <div v-for=\\\"user in usersWithoutOption\\\" :key=\\\"user.id\\\">\\r\\n                        <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <h5 class=\\\"card-title\\\">Card title</h5>\\r\\n                                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Card subtitle</h6>\\r\\n                                <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the\\r\\n                                    bulk\\r\\n                                    of the card's content.</p>\\r\\n                                <a href=\\\"#\\\" class=\\\"card-link\\\">Card link</a>\\r\\n                                <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>{{ usersWithoutOption }}</div>\\r\\n\\r\\n        </div> \"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks.data, task => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h5\", _hoisted_7, \"Задание \" + _toDisplayString(task.task_number), 1 /* TEXT */), _hoisted_8])])]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAA4C;EAAxCC,KAAK,EAAC;AAAM,GAAC,wBAAsB;;EAClCA,KAAK,EAAC;AAAM;;EA6BRA,KAAK,EAAC;AAAW;gCACdD,oBAAmD;EAA/CC,KAAK,EAAC;AAAY,GAAC,yBAAuB;;EAErCA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAW;;EACdA,KAAK,EAAC;AAA+B;;;6DAnCjEC,UAA4C,EAC5CF,oBAgDM,OAhDNG,UAgDM,GA/CFC,06CA2BU,EACVJ,oBAkBU,OAlBVK,UAkBU,GAjBFC,UAAmD,qBACnDC,oBAeMC,6BAfcC,UAAK,CAACC,IAAI,EAAlBC,IAAI;yBAAhBJ,oBAeM,cAdFP,oBAaM,OAbNY,UAaM,GAZFZ,oBAWM,OAXNa,UAWM,GAVFb,oBAA6E,MAA7Ec,UAA6E,EAAnC,UAAQ,oBAAGH,IAAI,CAACI,WAAW,kBACrEC,UAQK","names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_createElementBlock","_Fragment","_ctx","data","task","_hoisted_5","_hoisted_6","_hoisted_7","task_number","_hoisted_8"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\StudentsDo.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"mb-3\">Информация о студентах</h1>\r\n    <div class=\"card\">\r\n        <!-- <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Студенты без сгенерированного варианта</h4>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n\r\n                    {{ user.id }}\r\n                    {{ user.email }}\r\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\r\n                    {{ user.student_group }}\r\n\r\n                    <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n                        <div class=\"card\" style=\"width: 18rem;\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Card title</h5>\r\n                                <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p class=\"card-text\">Some quick example text to build on the card title and make up the\r\n                                    bulk\r\n                                    of the card's content.</p>\r\n                                <a href=\"#\" class=\"card-link\">Card link</a>\r\n                                <a href=\"#\" class=\"card-link\">Another link</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>{{ usersWithoutOption }}</div>\r\n\r\n        </div> -->\r\n        <div class=\"card-body\">\r\n                <h3 class=\"card-title\">Сгенерированный вариант</h3>\r\n                <div v-for=\"task in tasks.data\">\r\n                    <div class=\"card mt-4\">\r\n                        <div class=\"card-body\">\r\n                            <h5 class=\"card-subtitle mb-2 text-muted\">Задание {{ task.task_number }}</h5>\r\n                            <ul class=\"list-group list-group-flush\">\r\n\r\n                                <li class=\"list-group-item\">\r\n                                    <h5 class=\"card-title\">Необходимо вычислить</h5>\r\n                                </li>\r\n                                <li class=\"list-group-item\">\r\n                                    <h5 class=\"card-title\">Ответ</h5>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'StudentsDo',\r\n    data() {\r\n        return {\r\n            profile: [],\r\n            usersWithoutOption: [],\r\n            tokeno: '',\r\n            isGeneratedTasks: false,\r\n            processGenerate: '',\r\n            isEmail: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getUserListWithoutOption()\r\n    },\r\n    methods: {\r\n        async getUserListWithoutOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_without_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithoutOption = response.data.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async generateTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.processGenerate = 'Генерируется вариант'\r\n\r\n            await axios\r\n                .post('/test_generator/generate/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.profile = response.data\r\n                    this.processGenerate = 'Вариант сгенерирован'\r\n                    this.$router.push('/account')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.processGenerate = 'Ошибка'\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}