{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'SignUp',\n  data() {\n    return {\n      first_name: '',\n      last_name: '',\n      middle_name: '',\n      student_group: '',\n      email: '',\n      password1: '',\n      password2: '',\n      groups: [{\n        name: 'Студент',\n        id: 1\n      }, {\n        name: 'Преподаватель',\n        id: 2\n      }],\n      selectedGroup: {\n        id: 0\n      },\n      errors: []\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errors = [];\n      if (this.password1 === '') {\n        this.errors.push('The password is too short');\n      }\n      if (this.email === '') {\n        this.errors.push('The email is missing');\n      }\n      if (this.email.length > 254) {\n        this.errors.push('Почта может не содержать более 254 символов');\n      }\n      if (this.first_name.length > 150) {\n        this.errors.push('Имя может не содержать более 150 символов');\n      }\n      if (this.middle_name.length > 100) {\n        this.errors.push('Отчество может не содержать более 100 символов');\n      }\n      if (this.student_group.length > 30) {\n        this.errors.push('Группа может не содержать более 30 символов');\n      }\n      if (/^\\d\\d\\d-\\d\\d\\d$/.test(this.student_group.match) === True) {\n        this.errors.push('Проверка пройдена');\n      }\n      if (this.password1 === '') {\n        this.errors.push('The password is too short');\n      }\n      if (this.password1 !== this.password2) {\n        this.errors.push('The password are not matching');\n      }\n      if (!this.errors.length) {\n        this.$store.commit('setIsLoading', true);\n        const formData = {\n          first_name: this.first_name,\n          last_name: this.last_name,\n          middle_name: this.middle_name,\n          student_group: this.student_group,\n          email: this.email,\n          password: this.password1,\n          groups: this.selectedGroup['name']\n        };\n        await axios.post('/users/reg/', formData).then(response => {\n          toast({\n            message: 'Account was created, please log in',\n            type: 'is-success',\n            dismissible: true,\n            pauseOnHover: true,\n            duration: 2000,\n            position: 'bottom-right'\n          });\n          this.$router.push('/login');\n        }).catch(error => {\n          // if (error.response) {\n\n          //     for (const property in error.response.data) {\n          //         this.errors.push(`${property}: ${error.response.data[property]}`)\n          //     }\n          // } else if (error.message) {\n          //     this.errors.push('Something went wrong. Please try again!')\n          // }\n          if (error.message) {\n            this.errors.push(error);\n            this.errors.push('Something went wrong. Please try again!');\n          }\n        });\n        this.$store.commit('setIsLoading', false);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","toast","name","data","first_name","last_name","middle_name","student_group","email","password1","password2","groups","id","selectedGroup","errors","methods","submitForm","push","length","test","match","True","$store","commit","formData","password","post","then","response","message","type","dismissible","pauseOnHover","duration","position","$router","catch","error"],"sourceRoot":"","sources":["C:\\1develop\\PD_project\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"columns\">\r\n            <div class=\"column is-4 is-offset-4\">\r\n                <h1 class=\"title mb-3\">Sign up</h1>\r\n\r\n                <form @submit.prevent=\"submitForm\">\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Электронная почта</label>\r\n                        <input required type=\"email\" name=\"email\" class=\"form-control\" v-model=\"email\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Фамилия</label>\r\n                        <input required type=\"text\" name=\"last_name\" class=\"form-control\" v-model=\"last_name\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Имя</label>\r\n                        <input required type=\"text\" name=\"first_name\" class=\"form-control\" v-model=\"first_name\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Отчество</label>\r\n                        <input required type=\"text\" name=\"middle_name\" class=\"form-control\" v-model=\"middle_name\">\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Роль</label>\r\n                        <select required class=\"form-select\" name=\"groups\" v-model=\"selectedGroup\">\r\n                            <option disabled selected>Выберите роль</option>\r\n                            <option v-for=\"group in groups\" :value=\"group\">{{ group.name }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div v-if=\"selectedGroup['id']===1\" class=\"mb-3\">\r\n                        <label class=\"form-label\">Группа</label>\r\n                        <input required type=\"text\" name=\"student_group\" pattern=\"[0-9]{3}-[0-9]{3}\" class=\"form-control\" \r\n                        title=\"Группа должна быть в формате 111-111, проверьте лишние пробелы\" v-model=\"student_group\">\r\n                        <div class=\"form-text\">Группа в формате 111-111</div>\r\n                    </div>\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Пароль</label>\r\n                        <input required type=\"password\" name=\"password1\" class=\"form-control\" v-model=\"password1\">\r\n                    </div>\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label class=\"form-label\">Повторите пароль</label>\r\n                        <input required type=\"password\" name=\"password2\" class=\"form-control\" v-model=\"password2\">\r\n                    </div>\r\n\r\n                    <div class=\"notification is-danger\" v-if=\"errors.length\">\r\n                        <p v-for=\"error in errors\" v-bind:key=\"error\">{{ error }}</p>\r\n                    </div>\r\n\r\n                    <div class=\"field\">\r\n                        <div class=\"control\">\r\n                            <button type=\"submit\" class=\"btn btn-primary\">Зарегистрироваться</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { toast } from 'bulma-toast'\r\nexport default {\r\n    name: 'SignUp',\r\n    data() {\r\n        return {\r\n            first_name: '',\r\n            last_name: '',\r\n            middle_name: '',\r\n            student_group: '',\r\n            email: '',\r\n            password1: '',\r\n            password2: '',\r\n            groups: [\r\n                {name: 'Студент', id:1},\r\n                {name: 'Преподаватель', id:2}\r\n            ],\r\n            selectedGroup: {\r\n                id: 0\r\n            },\r\n            errors: []\r\n        }\r\n    },\r\n    methods: {\r\n        async submitForm() {\r\n            this.errors = []\r\n            if (this.password1 === '') {\r\n                this.errors.push('The password is too short')\r\n            }\r\n            if (this.email === '') {\r\n                this.errors.push('The email is missing')\r\n            }\r\n            if (this.email.length > 254) {\r\n                this.errors.push('Почта может не содержать более 254 символов')\r\n            }\r\n            if (this.first_name.length > 150) {\r\n                this.errors.push('Имя может не содержать более 150 символов')\r\n            }\r\n            if (this.middle_name.length > 100) {\r\n                this.errors.push('Отчество может не содержать более 100 символов')\r\n            }\r\n            if (this.student_group.length > 30) {\r\n                this.errors.push('Группа может не содержать более 30 символов')\r\n            }\r\n            if ( /^\\d\\d\\d-\\d\\d\\d$/.test(this.student_group.match) === True) {\r\n                this.errors.push('Проверка пройдена')\r\n            }\r\n            if (this.password1 === '') {\r\n                this.errors.push('The password is too short')\r\n            }\r\n            if (this.password1 !== this.password2) {\r\n                this.errors.push('The password are not matching')\r\n            }\r\n            if (!this.errors.length) {\r\n                this.$store.commit('setIsLoading', true)\r\n                const formData = {\r\n                    first_name: this.first_name,\r\n                    last_name: this.last_name,\r\n                    middle_name: this.middle_name,\r\n                    student_group: this.student_group,\r\n                    email: this.email,\r\n                    password: this.password1,\r\n                    groups: this.selectedGroup['name']\r\n                }\r\n                await axios\r\n                    .post('/users/reg/', formData)\r\n                    .then(response => {\r\n                        toast({\r\n                            message: 'Account was created, please log in',\r\n                            type: 'is-success',\r\n                            dismissible: true,\r\n                            pauseOnHover: true,\r\n                            duration: 2000,\r\n                            position: 'bottom-right',\r\n                        })\r\n                        this.$router.push('/login')\r\n                    })\r\n                    .catch(error => {\r\n                        // if (error.response) {\r\n                            \r\n                        //     for (const property in error.response.data) {\r\n                        //         this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                        //     }\r\n                        // } else if (error.message) {\r\n                        //     this.errors.push('Something went wrong. Please try again!')\r\n                        // }\r\n                        if (error.message) {\r\n                            this.errors.push(error)\r\n                            this.errors.push('Something went wrong. Please try again!')\r\n                        }\r\n                    })\r\n\r\n                this.$store.commit('setIsLoading', false)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}