{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-3\"\n}, \"Информация о студентах\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, _toDisplayString($data.usersWithoutOption), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAA4C;EAAxCC,KAAK,EAAC;AAAM,GAAC,wBAAsB;;;6DAAvCC,UAA4C,EAC5CF,oBAAiC,8BAA1BG,wBAAkB","names":["_createElementVNode","class","_hoisted_1","$data"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\StudentsDo.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"mb-3\">Информация о студентах</h1>\r\n    <div>{{usersWithoutOption}}</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'StudentsDo',\r\n    data() {\r\n        return {\r\n            profile: [],\r\n            usersWithoutOption: [],\r\n            tokeno: '',\r\n            isGeneratedTasks: false,\r\n            processGenerate: '',\r\n            isEmail: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getUserListWithoutOption()\r\n    },\r\n    methods: {\r\n        async getUserListWithoutOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_without_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithoutOption = response.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response){\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async generateTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.processGenerate = 'Генерируется вариант'\r\n\r\n            await axios\r\n                .post('/test_generator/generate/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.profile = response.data\r\n                    this.processGenerate = 'Вариант сгенерирован'\r\n                    this.$router.push('/account')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.processGenerate = 'Ошибка'\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}