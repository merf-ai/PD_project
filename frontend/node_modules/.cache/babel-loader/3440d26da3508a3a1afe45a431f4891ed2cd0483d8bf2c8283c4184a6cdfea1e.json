{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mb-3\"\n}, \"Информация о студентах\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  class: \"card-body\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"card-title\"\n}, \"Студенты без сгенерированного варианта\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_7 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_8 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_9 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_10 = {\n  class: \"row mb-0\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"dt\", {\n  class: \"col-sm-3\"\n}, \"Группа: \", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"dt\", {\n  class: \"col-sm-3\"\n}, \"Почта: \", -1 /* HOISTED */);\nconst _hoisted_14 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_15 = {\n  key: 1,\n  class: \"card-body\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"card-title\"\n}, \"Студенты без сгенерированного варианта\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_18 = {\n  class: \"card-body\"\n};\nconst _hoisted_19 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_20 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_21 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_22 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_23 = {\n  class: \"row mb-0\"\n};\nconst _hoisted_24 = [\"href\"];\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"dt\", {\n  class: \"col-sm-3\"\n}, \"Группа: \", -1 /* HOISTED */);\nconst _hoisted_26 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"dt\", {\n  class: \"col-sm-3\"\n}, \"Почта: \", -1 /* HOISTED */);\nconst _hoisted_28 = {\n  class: \"col-sm-9\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <h4 class=\\\"card-title\\\">Студенты без сгенерированного варианта</h4>\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n\\r\\n                    {{ user.id }}\\r\\n                    {{ user.email }}\\r\\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\\r\\n                    {{ user.student_group }}\\r\\n\\r\\n                    <div v-for=\\\"user in usersWithoutOption\\\" :key=\\\"user.id\\\">\\r\\n                        <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\r\\n                            <div class=\\\"card-body\\\">\\r\\n                                <h5 class=\\\"card-title\\\">Card title</h5>\\r\\n                                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Card subtitle</h6>\\r\\n                                <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the\\r\\n                                    bulk\\r\\n                                    of the card's content.</p>\\r\\n                                <a href=\\\"#\\\" class=\\\"card-link\\\">Card link</a>\\r\\n                                <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div>{{ usersWithoutOption }}</div>\\r\\n\\r\\n        </div>\\r\\n    </div> \"), $data.usersWithoutOption.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.usersWithoutOption, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"ul\", _hoisted_6, [_createElementVNode(\"li\", _hoisted_7, [_createElementVNode(\"h5\", _hoisted_8, _toDisplayString(user.first_name) + \" \" + _toDisplayString(user.last_name) + \" \" + _toDisplayString(user.middle_name), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_9, [_createElementVNode(\"dl\", _hoisted_10, [_hoisted_11, _createElementVNode(\"dd\", _hoisted_12, _toDisplayString(user.student_group), 1 /* TEXT */), _hoisted_13, _createElementVNode(\"dd\", _hoisted_14, _toDisplayString(user.email), 1 /* TEXT */)])])])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" \" + _toDisplayString($data.usersWithOption) + \" \", 1 /* TEXT */), $data.usersWithOption.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_hoisted_16, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.usersWithOption, userWithOption => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: userWithOption.id\n    }, [_createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"ul\", _hoisted_19, [_createElementVNode(\"li\", _hoisted_20, [_createElementVNode(\"h5\", _hoisted_21, _toDisplayString(userWithOption.user__first_name) + \" \" + _toDisplayString(userWithOption.user__last_name) + \" \" + _toDisplayString(userWithOption.user__middle_name), 1 /* TEXT */)]), _createElementVNode(\"li\", _hoisted_22, [_createElementVNode(\"dl\", _hoisted_23, [_createElementVNode(\"a\", {\n      href: 'http://192.168.1.3:8000/test_generator/media/' + userWithOption.decision\n    }, \"Решение\", 8 /* PROPS */, _hoisted_24), _hoisted_25, _createElementVNode(\"dd\", _hoisted_26, _toDisplayString(userWithOption.user__student_group), 1 /* TEXT */), _hoisted_27, _createElementVNode(\"dd\", _hoisted_28, _toDisplayString(userWithOption.user__email), 1 /* TEXT */)])])])])])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","_hoisted_1","_createCommentVNode","$data","length","_createElementBlock","_hoisted_2","_hoisted_3","_Fragment","user","key","id","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","first_name","last_name","middle_name","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","student_group","_hoisted_13","_hoisted_14","email","_hoisted_15","_hoisted_16","userWithOption","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","user__first_name","user__last_name","user__middle_name","_hoisted_22","_hoisted_23","href","decision","_hoisted_25","_hoisted_26","user__student_group","_hoisted_27","_hoisted_28","user__email"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\StudentsDo.vue"],"sourcesContent":["<template>\r\n    <h1 class=\"mb-3\">Информация о студентах</h1>\r\n    <!-- <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <h4 class=\"card-title\">Студенты без сгенерированного варианта</h4>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n\r\n                    {{ user.id }}\r\n                    {{ user.email }}\r\n                    {{ user.first_name }} {{ user.middle_name }} {{ user.last_name }}\r\n                    {{ user.student_group }}\r\n\r\n                    <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n                        <div class=\"card\" style=\"width: 18rem;\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-title\">Card title</h5>\r\n                                <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n                                <p class=\"card-text\">Some quick example text to build on the card title and make up the\r\n                                    bulk\r\n                                    of the card's content.</p>\r\n                                <a href=\"#\" class=\"card-link\">Card link</a>\r\n                                <a href=\"#\" class=\"card-link\">Another link</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>{{ usersWithoutOption }}</div>\r\n\r\n        </div>\r\n    </div> -->\r\n    <div v-if=\"usersWithoutOption.length\" class=\"card-body\">\r\n        <h3 class=\"card-title\">Студенты без сгенерированного варианта</h3>\r\n        <div v-for=\"user in usersWithoutOption\" :key=\"user.id\">\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\">\r\n                            <h5 class=\"card-subtitle mb-2 text-muted\">\r\n                                {{ user.first_name }} {{ user.last_name }} {{ user.middle_name }}\r\n                            </h5>\r\n                        </li>\r\n\r\n                        <li class=\"list-group-item\">\r\n                            <dl class=\"row mb-0\">\r\n                                <dt class=\"col-sm-3\">Группа: </dt>\r\n                                <dd class=\"col-sm-9\">{{ user.student_group }}</dd>\r\n                                <dt class=\"col-sm-3\">Почта: </dt>\r\n                                <dd class=\"col-sm-9\">{{ user.email }}</dd>\r\n                            </dl>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    {{usersWithOption}}\r\n    <div v-if=\"usersWithOption.length\" class=\"card-body\">\r\n        <h3 class=\"card-title\">Студенты без сгенерированного варианта</h3>\r\n        <div v-for=\"userWithOption in usersWithOption\" :key=\"userWithOption.id\">\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <ul class=\"list-group list-group-flush\">\r\n                        <li class=\"list-group-item\">\r\n                            <h5 class=\"card-subtitle mb-2 text-muted\">\r\n                                {{ userWithOption.user__first_name }} {{ userWithOption.user__last_name }} {{ userWithOption.user__middle_name }}\r\n                            </h5>\r\n                        </li>\r\n\r\n                        <li class=\"list-group-item\">\r\n                            <dl class=\"row mb-0\">\r\n                                <a :href=\"'http://192.168.1.3:8000/test_generator/media/' + userWithOption.decision\">Решение</a>\r\n                                <dt class=\"col-sm-3\">Группа: </dt>\r\n                                <dd class=\"col-sm-9\">{{ userWithOption.user__student_group }}</dd>\r\n                                <dt class=\"col-sm-3\">Почта: </dt>\r\n                                <dd class=\"col-sm-9\">{{ userWithOption.user__email }}</dd>\r\n                            </dl>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'StudentsDo',\r\n    data() {\r\n        return {\r\n            profile: [],\r\n            usersWithoutOption: [],\r\n            usersWithOption: [],\r\n            tokeno: '',\r\n            isGeneratedTasks: false,\r\n            processGenerate: '',\r\n            isEmail: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getUserListWithoutOption(),\r\n        this.getUserListWithOption()\r\n    },\r\n    methods: {\r\n        async getUserListWithOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_with_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithOption = response.data.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        \r\n        async getUserListWithoutOption() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/user_list_without_option/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.usersWithoutOption = response.data.data\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async generateTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.processGenerate = 'Генерируется вариант'\r\n\r\n            await axios\r\n                .post('/test_generator/generate/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.profile = response.data\r\n                    this.processGenerate = 'Вариант сгенерирован'\r\n                    this.$router.push('/account')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.processGenerate = 'Ошибка'\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}