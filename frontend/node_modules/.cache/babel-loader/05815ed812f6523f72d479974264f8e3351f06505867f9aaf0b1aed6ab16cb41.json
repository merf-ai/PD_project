{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"link\", {\n  href: \"https://cdn.jsdelivr.net/npm/bootstrap-avatar@latest/dist/avatar.min.css\",\n  rel: \"stylesheet\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"Generate\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title mb-3\"\n}, \"Генератор заданий\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"На этой странице вы можете сгенерировать вариант\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"btn-group mb-3\",\n  role: \"group\",\n  \"aria-label\": \"Basic example\"\n};\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Для вас уже доступен сгенерированный вариант\", -1 /* HOISTED */);\nconst _hoisted_10 = [_hoisted_9];\nconst _hoisted_11 = {\n  key: 3\n};\nconst _hoisted_12 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_13 = {\n  class: \"card-body\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"card-title mb-3\"\n}, \"Отправка ответа\", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  key: 0\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Файл загружен\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"\"\n}, \"Файл\", -1 /* HOISTED */);\nconst _hoisted_18 = [_hoisted_16, _hoisted_17];\nconst _hoisted_19 = {\n  class: \"input-group\"\n};\nconst _hoisted_20 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_21 = {\n  class: \"card-body\"\n};\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"card-title\"\n}, \"Сгенерированный вариант\", -1 /* HOISTED */);\nconst _hoisted_23 = {\n  class: \"card mt-4\"\n};\nconst _hoisted_24 = {\n  class: \"card-body\"\n};\nconst _hoisted_25 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_26 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_27 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"card-title\"\n}, \"Необходимо вычислить\", -1 /* HOISTED */);\nconst _hoisted_29 = {\n  class: \"d-flex justify-content-center mt-5\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_vue_mathjax = _resolveComponent(\"vue-mathjax\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createTextVNode(\" \" + _toDisplayString($data.isFileUploading) + \" \", 1 /* TEXT */), $data.isEmail ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.isEmail), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.tasks.message === 'Извините для вас тест не сгенерирован!' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.generateTask()),\n    class: \"btn btn-primary\"\n  }, \"Сгенерировать вариант\")])])) : _createCommentVNode(\"v-if\", true), $data.tasks.message !== 'Извините для вас тест не сгенерирован!' && $data.isEmail === '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _hoisted_10)) : _createCommentVNode(\"v-if\", true), $data.tasks.message !== 'Извините для вас тест не сгенерирован!' && $data.isEmail === '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, $data.fileUploading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _hoisted_18)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"input\", {\n    type: \"file\",\n    class: \"form-control\",\n    id: \"file\",\n    ref: \"file\",\n    onChange: _cache[1] || (_cache[1] = $event => $options.handleFileUpload())\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary\",\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.submitFile())\n  }, \" Отправить ответ \")])])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_hoisted_22, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks.data, task => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"h5\", _hoisted_25, \"Задание \" + _toDisplayString(task.task_number), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_26, [_createElementVNode(\"li\", _hoisted_27, [_hoisted_28, _createElementVNode(\"div\", _hoisted_29, [_createVNode(_component_vue_mathjax, {\n      formula: '$$' + task.example + '$$'\n    }, null, 8 /* PROPS */, [\"formula\"])])]), _createCommentVNode(\" <li class=\\\"list-group-item\\\">\\r\\n                                    <h5 class=\\\"card-title\\\">Ответ</h5>\\r\\n                                    <div class=\\\"d-flex justify-content-center mt-5\\\">\\r\\n                                        <vue-mathjax :formula=\\\"'$$' + task.answer + '$$'\\\"></vue-mathjax>\\r\\n                                    </div>\\r\\n                                </li> \")])])])]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACIA,oBAAuG;EAAjGC,IAAI,EAAC,0EAA0E;EAACC,GAAG,EAAC;;;EACrFC,KAAK,EAAC;AAAU;gCACjBH,oBAA6C;EAAzCG,KAAK,EAAC;AAAY,GAAC,mBAAiB;;;;;;;gCAQpCH,oBAAuD,WAApD,kDAAgD;;EAC9CG,KAAK,EAAC,gBAAgB;EAACC,IAAI,EAAC,OAAO;EAAC,YAAU,EAAC;;;;;gCAMpDJ,oBAAmD,WAAhD,8CAA4C;qBAA/CK,UAAmD;;;;;EAI9CF,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAW;iCAClBH,oBAAgD;EAA5CG,KAAK,EAAC;AAAiB,GAAC,iBAAe;;;;iCAEvCH,oBAAwB,aAAnB,eAAa;iCAClBA,oBAAmB;EAAhBC,IAAI,EAAC;AAAE,GAAC,MAAI;qBADfK,WAAwB,EACxBC,WAAmB;;EAElBJ,KAAK,EAAC;AAAa;;EAQ3BA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAW;iCAClBH,oBAAmD;EAA/CG,KAAK,EAAC;AAAY,GAAC,yBAAuB;;EAErCA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAW;;EACdA,KAAK,EAAC;AAA+B;;EACrCA,KAAK,EAAC;AAA6B;;EAE/BA,KAAK,EAAC;AAAiB;iCACvBH,oBAAgD;EAA5CG,KAAK,EAAC;AAAY,GAAC,sBAAoB;;EACtCA,KAAK,EAAC;AAAoC;;;6DA/CnFK,UAAuG,EACvGR,oBAgEM,OAhENS,UAgEM,GA/DFC,UAA6C,sBAC7C,oBAAEC,qBAAe,IAAE,GAEnB,iBAAWA,aAAO,kBAAlBC,oBAEM,oCADCD,aAAO,uDAGHA,WAAK,CAACE,OAAO,+DAAxBD,oBAKM,oBAJFE,UAAuD,EACvDd,oBAEM,OAFNe,UAEM,GADFf,oBAAoG;IAA5FgB,IAAI,EAAC,QAAQ;IAAEC,OAAK,sCAAEC,qBAAY;IAAIf,KAAK,EAAC;KAAkB,uBAAqB,4CAIxFQ,WAAK,CAACE,OAAO,iDAAiDF,aAAO,yBAAhFC,oBAEM,sEAEKD,WAAK,CAACE,OAAO,iDAAiDF,aAAO,yBAAhFC,oBA2CM,qBA1CFZ,oBAcM,OAdNmB,WAcM,GAbFnB,oBAYM,OAZNoB,WAYM,GAXFC,WAAgD,EACrCV,mBAAa,kBAAxBC,oBAGM,uEACNZ,oBAKM,OALNsB,WAKM,GAJFtB,oBAA8F;IAAvFgB,IAAI,EAAC,MAAM;IAACb,KAAK,EAAC,cAAc;IAACoB,EAAE,EAAC,MAAM;IAACC,GAAG,EAAC,MAAM;IAAMC,QAAM,sCAAEP,yBAAgB;kDAC1FlB,oBAES;IAFDG,KAAK,EAAC,2BAA2B;IAACa,IAAI,EAAC,QAAQ;IAAEC,OAAK,sCAAEC,mBAAU;KAAI,mBAE9E,SAIZlB,oBA0BM,OA1BN0B,WA0BM,GAzBF1B,oBAwBM,OAxBN2B,WAwBM,GAvBFC,WAAmD,qBACnDhB,oBAqBMiB,6BArBclB,WAAK,CAACmB,IAAI,EAAlBC,IAAI;yBAAhBnB,oBAqBM,cApBFZ,oBAmBM,OAnBNgC,WAmBM,GAlBFhC,oBAiBM,OAjBNiC,WAiBM,GAhBFjC,oBAA6E,MAA7EkC,WAA6E,EAAnC,UAAQ,oBAAGH,IAAI,CAACI,WAAW,kBACrEnC,oBAcK,MAdLoC,WAcK,GAZDpC,oBAKK,MALLqC,WAKK,GAJDC,WAAgD,EAChDtC,oBAEM,OAFNuC,WAEM,GADFC,aAAiEC;MAAnDC,OAAO,SAASX,IAAI,CAACY,OAAO;8CAGlDC,iaAKK","names":["_createElementVNode","href","rel","class","role","_hoisted_9","_hoisted_16","_hoisted_17","_hoisted_1","_hoisted_2","_hoisted_3","$data","_createElementBlock","message","_hoisted_6","_hoisted_7","type","onClick","$options","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_19","id","ref","onChange","_hoisted_20","_hoisted_21","_hoisted_22","_Fragment","data","task","_hoisted_23","_hoisted_24","_hoisted_25","task_number","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_createVNode","_component_vue_mathjax","formula","example","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\NOVAC\\Desktop\\GitHub Rep\\PD_project\\frontend\\src\\views\\Generate.vue"],"sourcesContent":["<template>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-avatar@latest/dist/avatar.min.css\" rel=\"stylesheet\">\r\n    <div class=\"Generate\">\r\n        <h1 class=\"title mb-3\">Генератор заданий</h1>\r\n        {{isFileUploading}}\r\n        \r\n        <div v-if=\"isEmail\">\r\n            {{ isEmail }}\r\n        </div>\r\n        \r\n        <div v-if=\"tasks.message === 'Извините для вас тест не сгенерирован!'\">\r\n            <p>На этой странице вы можете сгенерировать вариант</p>\r\n            <div class=\"btn-group mb-3\" role=\"group\" aria-label=\"Basic example\">\r\n                <button type=\"button\" @click=\"generateTask()\" class=\"btn btn-primary\">Сгенерировать вариант</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"tasks.message !== 'Извините для вас тест не сгенерирован!' && isEmail === ''\">\r\n            <p>Для вас уже доступен сгенерированный вариант</p>\r\n        </div>\r\n\r\n        <div v-if=\"tasks.message !== 'Извините для вас тест не сгенерирован!' && isEmail === ''\">\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <h3 class=\"card-title mb-3\">Отправка ответа</h3>\r\n                    <div v-if=\"fileUploading\">\r\n                        <div>Файл загружен</div>\r\n                        <a href=\"\">Файл</a>\r\n                    </div>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"file\" class=\"form-control\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\">\r\n                        <button class=\"btn btn-outline-secondary\" type=\"button\" @click=\"submitFile()\">\r\n                            Отправить ответ\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card mt-4\">\r\n                <div class=\"card-body\">\r\n                    <h3 class=\"card-title\">Сгенерированный вариант</h3>\r\n                    <div v-for=\"task in tasks.data\">\r\n                        <div class=\"card mt-4\">\r\n                            <div class=\"card-body\">\r\n                                <h5 class=\"card-subtitle mb-2 text-muted\">Задание {{ task.task_number }}</h5>\r\n                                <ul class=\"list-group list-group-flush\">\r\n\r\n                                    <li class=\"list-group-item\">\r\n                                        <h5 class=\"card-title\">Необходимо вычислить</h5>\r\n                                        <div class=\"d-flex justify-content-center mt-5\">\r\n                                            <vue-mathjax :formula=\"'$$' + task.example + '$$'\"></vue-mathjax>\r\n                                        </div>\r\n                                    </li>\r\n                                    <!-- <li class=\"list-group-item\">\r\n                                    <h5 class=\"card-title\">Ответ</h5>\r\n                                    <div class=\"d-flex justify-content-center mt-5\">\r\n                                        <vue-mathjax :formula=\"'$$' + task.answer + '$$'\"></vue-mathjax>\r\n                                    </div>\r\n                                </li> -->\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n    name: 'Main',\r\n    data() {\r\n        return {\r\n            profile: [],\r\n            tasks: [],\r\n            tokeno: '',\r\n            isGeneratedTasks: false,\r\n            processGenerate: '',\r\n            isEmail: '',\r\n            file: '',\r\n            isFileUploading: '',\r\n            fileUploading: ''\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getTask(),\r\n        this.isFileUpload()\r\n    },\r\n    methods: {\r\n        async isFileUpload() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/users/student_decision/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.fileUploading = response.data.filename\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isFileUploading = error.response.data.message\r\n                    }\r\n                    console.log(error)\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n\r\n        submitFile() {\r\n            let formData = new FormData();\r\n            formData.append('decision', this.file);\r\n            axios.post('/test_generator/upload_decision/',\r\n                formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n            ).then(function () {\r\n                console.log('SUCCESS!!');\r\n            })\r\n                .catch(function () {\r\n                    console.log('FAILURE!!');\r\n                });\r\n        },\r\n        handleFileUpload() {\r\n            this.file = this.$refs.file.files[0];\r\n        },\r\n        async getTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            await axios\r\n                .post('/test_generator/show_test/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.tasks = response.data\r\n                    this.isGeneratedTasks = true\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        this.isEmail = error.response.data.detail\r\n                    }\r\n                    console.log(error)\r\n                    this.isGeneratedTasks = false\r\n                })\r\n            this.$store.commit('setIsLoading', false)\r\n        },\r\n        async generateTask() {\r\n            this.$store.commit('setIsLoading', true)\r\n            this.processGenerate = 'Генерируется вариант'\r\n\r\n            await axios\r\n                .post('/test_generator/generate/', {\r\n                    headers: { 'Authorization': 'Token ' + this.$store.state.token }\r\n                })\r\n                .then(response => {\r\n                    this.profile = response.data\r\n                    this.processGenerate = 'Вариант сгенерирован'\r\n                    this.$router.push('/account')\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.processGenerate = 'Ошибка'\r\n                })\r\n\r\n            this.$store.commit('setIsLoading', false)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}