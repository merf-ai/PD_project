{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Main from '@/views/Main.vue';\nimport Info from '@/views/Info.vue';\nimport Account from '@/views/Account.vue';\nimport LogIn from '@/views/LogIn.vue';\nimport Register from '@/views/Register.vue';\nimport VerifyEmail from '@/views/VerifyEmail.vue';\nimport Generate from '@/views/Generate.vue';\nimport StudentsDo from '@/views/StudentsDo.vue';\nimport store from \"@/store\";\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: Main\n}, {\n  path: '/info',\n  name: 'info',\n  component: Info\n}, {\n  path: '/account',\n  name: 'account',\n  component: Account,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: LogIn\n}, {\n  path: '/register',\n  name: 'register',\n  component: Register\n}, {\n  path: '/generate',\n  name: 'generate',\n  component: Generate,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: '/studentsdo',\n  name: 'studentsdo',\n  component: StudentsDo,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: '/verifyemail/',\n  name: 'verifyemail',\n  component: VerifyEmail\n}, {\n  path: '/verifyemail/:uid/',\n  name: 'verifyemail',\n  component: VerifyEmail\n}, {\n  path: '/verifyemail/:uid/:token',\n  name: 'verifyemail',\n  component: VerifyEmail\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Main","Info","Account","LogIn","Register","VerifyEmail","Generate","StudentsDo","store","routes","path","name","component","meta","requireLogin","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","state","isAuthenticated"],"sources":["C:/Users/NOVAC/Desktop/GitHub Rep/PD_project/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport Main from '@/views/Main.vue'\r\nimport Info from '@/views/Info.vue'\r\nimport Account from '@/views/Account.vue'\r\nimport LogIn from '@/views/LogIn.vue'\r\nimport Register from '@/views/Register.vue'\r\nimport VerifyEmail from '@/views/VerifyEmail.vue'\r\nimport Generate from '@/views/Generate.vue'\r\nimport StudentsDo from '@/views/StudentsDo.vue'\r\nimport store from \"@/store\"\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: Main\r\n  },\r\n  {\r\n    path: '/info',\r\n    name: 'info',\r\n    component: Info\r\n  },\r\n  {\r\n    path: '/account',\r\n    name: 'account',\r\n    component: Account,\r\n    meta: {\r\n      requireLogin: true\r\n    }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'login',\r\n    component: LogIn\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'register',\r\n    component: Register\r\n  },\r\n  {\r\n    path: '/generate',\r\n    name: 'generate',\r\n    component: Generate,\r\n    meta: {\r\n      requireLogin: true\r\n    }\r\n  },\r\n  {\r\n    path: '/studentsdo',\r\n    name: 'studentsdo',\r\n    component: StudentsDo,\r\n    meta: {\r\n      requireLogin: true\r\n    }\r\n  },\r\n  {\r\n    path: '/verifyemail/',\r\n    name: 'verifyemail',\r\n    component: VerifyEmail\r\n  },\r\n  {\r\n    path: '/verifyemail/:uid/',\r\n    name: 'verifyemail',\r\n    component: VerifyEmail\r\n  },\r\n  {\r\n    path: '/verifyemail/:uid/:token',\r\n    name: 'verifyemail',\r\n    component: VerifyEmail\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\r\n    next('/login')\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEZ;AACb,CAAC,EACD;EACEU,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEX;AACb,CAAC,EACD;EACES,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEV,OAAO;EAClBW,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAER;AACb,CAAC,EACD;EACEM,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEN,QAAQ;EACnBO,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEL,UAAU;EACrBM,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,oBAAoB;EAC1BC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,0BAA0B;EAChCC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEP;AACb,CAAC,CACF;AAED,MAAMU,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,gBAAgB,CAACkB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACN,KAAK,CAACmB,KAAK,CAACC,eAAe,EAAE;IACvFL,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}